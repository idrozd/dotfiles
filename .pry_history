Page.find(86)
Page.find(76)
Page.find(76).audits
Page.find(76).audits.count
Page.find(76).revisions
Page.connection_config
u
Audit
Audits
show-models
Internal::Audit
Internal::Audit.count
Internal::Audit.last(10)
tp _
User.find(16)
Manager.find(16)
ContentBlock.find(7709)
ContentBlock.find(7709).audits
tp _
ContentBlock.find(7709).revisions
tp _
revisions
rs = ContentBlock.find(7709).revisions
ContentBlock.find(7709).update(rs.first.atttributes)
ContentBlock.find(7709).update(rs.first.attributes)
ContentBlock.find(7709).update(rs.first.attributes.slice(:content))
ENV["OAUTH_CLIENT_ID"]
ENV["OAUTH_CLIENT_SECRET]"]
ENV["OAUTH_CLIENT_SECRET"]
URI.decode "http%3A%2F%2Fwcm.localhost%2Fusers%2Fauth%2Finvisalign%2Fcallback"
show-routes
show-routes -G invisal
show-routes
q
Salesforce::CallHistory.count]
Salesforce::CallHistory.count
renvi qas
require 'ostruct'
require 'forwardable'
$ require
renvi prod
cads = Doctor.joins(:enrollments).where(%[program_id = 30 AND doctors.ids_full_info ->> 'country' = 'CA']).limit(3)
tp _
load '~/.pryrc'
tp cads
cads = Doctor.joins(:enrollments).where(%[program_id = 30 AND doctors.ids_full_info ->> 'country' = 'CA']).limit(3).includes(:enrollments => :rpogram
cads = Doctor.joins(:enrollments).where(%[program_id = 30 AND doctors.ids_full_info ->> 'country' = 'CA']).limit(3).includes(:enrollments 
cads = Doctor.joins(:enrollments).where(%[program_id = 30 AND doctors.ids_full_info ->> 'country' = 'CA']).limit(3).includes(:enrollments => :program)
tp cads
Doctor
load '~/.pryrc'
Conv
Conv.candocs
load '~/.pryrc'; Conv.candocs
load '~/.pryrc'; cds = Conv.candocs
cds
Conv.candocs
load '~/.pryrc'; 
Conv.candocs
renvi prod
Conv.candocs
ds =_
tp ds
load '~/.pryrc'; 
tp ds
ds.first.locale
ds.first.ids_full_info["locale"]
dr(:ntranvie)
load '~/.pryrc'; 
dd = Conv.sampledocs
tp _
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
tp dd
dd.niceql
dd.to_sql
renvi prod
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
tp dd
renvi prod
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
renvi prod
dd = Conv.sampledocs(locale: :en)
tp _
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
tp dd
renvi prod
dd = Conv.sampledocs(locale: :en)
tp dd
dd.first
load '~/.pryrc'; 
cd-cause
load '~/.pryrc'; 
renvi prod
dd = Conv.sampledocs(locale: :en)
tp _)
tp _
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
load '~/.pryrc'; 
dd = Conv.sampledocs(locale: :en)
tp dd
ReleaseDelta.order(:published_from).last(5)
DynamicRoute.last
DynamicRoute.last.update!(release_delta_id: 1220)
DynamicRoute.find(27385).update!(release_delta_id: 1220)
DynamicRoute.find(27385)
tp ldr.last(4)
DynamicRoute.find(27385).update(url: "apac/pwn-2138-non-advantage-counter-banner-template.html")
ENV["IDS_USM_DEPLOYED"]
[:invisalign_with_impersonation, ENV["OAUTH_CLIENT_ID"], ENV["OAUTH_CLIENT_SECRET"]]
URI.decode "http%3A%2F%2Fwcm.localhost%2Fusers%2Fauth%2Finvisalign%2Fcallback"
show-routes
show-routes -G callb
renvi qas
APAC DISTRIBUTOR")).limit(1000).includes(:region, :locale);
tier__c != nil } 
DynamicRoute.find(27385).update(url: "apac/pwn-2138-non-advantage-counter-banner-template.html")
renvi qas
apacds = Doctor.where(region: Region.find_by(name: "APAC DIRECT")).limit(1000).includes(:region, :locale);
apacds_nonadv = apacds.includes(:salesforce_account).select{ |e| e.salesforce_account.advantage_tier__c != nil };
apacds_nonadv.count
apacds_nonadv = apacds.includes(:salesforce_account).select{ |e| e.salesforce_account.advantage_tier__c == nil };
apacds_nonadv.count
tp apacds_nonadv
apacds.count
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).includes(:region, :locale);
apacds.count
tp apacds_nonadv
apacds_nonadv = apacds.includes(:salesforce_account).select{ |e| e.salesforce_account.advantage_tier__c == nil };
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).includes(:region, :locale, :salesforce_contact, :salesforce_account);
apacds_nonadv = apacds.includes(:salesforce_account).select{ |e| e.salesforce_account.advantage_tier__c == nil };
apacds_nonadv = apacds.includes(:salesforce_account).select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(10);
apacds_nonadv = apacds.includes(:salesforce_account).lazy.select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(10);
tp apacds_nonadv
tp apacds_nonadv, :username, :country
apacds_nonadv = apacds.includes(:salesforce_contact => :salesforce_account).lazy.select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(10);
apacds_nonadv = apacds.includes(:salesforce_contact => :salesforce_account).lazy.select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(1000);
apacds_nonadv.count
apacds_nonadv.size
apacds_nonadv.find{ |e| e.country == 'JP' }
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).includes(:region, :locale, :salesforce_contact => :salesforce_account);
apacds_nonadv = apacds.includes(:salesforce_contact => :salesforce_account).lazy.select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(1000);
apacds_nonadv.count
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).eager_load(:region, :locale, :salesforce_contact => :salesforce_account);
apacds_nonadv = apacds.includes(:salesforce_contact => :salesforce_account).lazy.select{ |e| e.salesforce_account.advantage_tier__c == nil }.take(1000);
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).includes(:region, :locale, :salesforce_contact => :salesforce_account);
apacds = Doctor.where(region: Region.all.ilike("APAC")).limit(1000).includes(:region, :locale).includes(:salesforce_contact => :salesforce_account);
apacds.first(10)
load './app/lib/sample_docs.rb'; SampleDocs.apac_non_adv(country: :JP)
load './app/lib/sample_docs.rb'; SampleDocs.apac_non_adv(country: :JA)
load './app/lib/sample_docs.rb'; SampleDocs.apac_non_adv(country: :jp)
Doctor.count
$ group_by_and_count(['country'], Doctor.all
$ group_by_and_count(['country'], Doctor.all)
group_by_and_count(['country'], Doctor.all)
group_by_and_count(['country'], Doctor.all);
load './app/lib/sample_docs.rb'; SampleDocs.apac_non_adv(country: :jp)
Doctor.where(country: :JP).with_assocs.limit(20)
Doctor.where(country: :JP).includes(:locale, :region).limit(20)
? [].reduce
load './app/lib/sample_docs.rb'; SampleDocs.pwn2138_non(country: :JP)
tp )_
tp _
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :JP)
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :KR)
(ENV["PC_IMPERSONATOR_ALLOWED_ROLES"] || <<~IMPERSONATOR_ROLES).lines.map(&:strip).flat_map{ |e| e.split(",") }
        PCAdminUsers,ProdVIP-PCAdminUsers
        PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole
        PCGuestUsers,ProdVIP-PCGuestUsers
        PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers
        ViveraAccelerator,ProdVIP-ViveraAccelerator
        UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole
        RPAdminUsers,ProdVIP-RPAdminUsers
        DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole
        InternalOEUsers,ProdVIP-InternalOEUsers
        CSAdminUserRole,ProdVIP-CSAdminUserRole
        PCMailhostReaderRole,PR_Mailhost_Users
        SFDCUsers,ProdVIP-SFDCUsers
        PCFinanceUser,ProdVIP-PCFinanceUser
        PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser
        AdjustTEDUsers,ProdVIP-AdjustTEDUsers
        PCMCATUsers,ProdVIP-PCMCATUsers
        IPLScripterUsers,ProdVIP-IPLScripterUsers
        ALIGNTECH.COM/PCMCATUsers
        ALIGNTECH/NORTHAM DIRECT
        ALIGNTECH/Testenv_VIP-RPAdminUsers
        Internal/everyone
        ALIGNTECH/ProdVIP-PCAdminUsers
                                                                                                                      nU                                        er                          
(ENV["PC_IMPERSONATOR_ALLOWED_ROLES"] || <<~IMPERSONATOR_ROLES).lines.map(&:strip).flat_map{ |e| e.split(",") }
        PCAdminUsers,ProdVIP-PCAdminUsers
        PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole
        PCGuestUsers,ProdVIP-PCGuestUsers
        PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers
        ViveraAccelerator,ProdVIP-ViveraAccelerator
        UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole
        RPAdminUsers,ProdVIP-RPAdminUsers
        DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole
        InternalOEUsers,ProdVIP-InternalOEUsers
        CSAdminUserRole,ProdVIP-CSAdminUserRole
        PCMailhostReaderRole,PR_Mailhost_Users
        SFDCUsers,ProdVIP-SFDCUsers
        PCFinanceUser,ProdVIP-PCFinanceUser
        PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser
        AdjustTEDUsers,ProdVIP-AdjustTEDUsers
        PCMCATUsers,ProdVIP-PCMCATUsers
        IPLScripterUsers,ProdVIP-IPLScripterUsers
        ALIGNTECH.COM/PCMCATUsers
        ALIGNTECH/NORTHAM DIRECT
        ALIGNTECH/Testenv_VIP-RPAdminUsers
        Internal/everyone
        ALIGNTECH/ProdVIP-PCAdminUsers
                                                                                                                      nU                                        er                            
<<~IMPERSONATOR_ROLES
        PCAdminUsers,ProdVIP-PCAdminUsers
        PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole
        PCGuestUsers,ProdVIP-PCGuestUsers
        PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers
        ViveraAccelerator,ProdVIP-ViveraAccelerator
        UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole
        RPAdminUsers,ProdVIP-RPAdminUsers
        DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole
        InternalOEUsers,ProdVIP-InternalOEUsers
        CSAdminUserRole,ProdVIP-CSAdminUserRole
        PCMailhostReaderRole,PR_Mailhost_Users
        SFDCUsers,ProdVIP-SFDCUsers
        PCFinanceUser,ProdVIP-PCFinanceUser
        PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser
        AdjustTEDUsers,ProdVIP-AdjustTEDUsers
        PCMCATUsers,ProdVIP-PCMCATUsers
        IPLScripterUsers,ProdVIP-IPLScripterUsers
        ALIGNTECH.COM/PCMCATUsers
        ALIGNTECH/NORTHAM DIRECT
        ALIGNTECH/Testenv_VIP-RPAdminUsers
        Internal/everyone
        ALIGNTECH/ProdVIP-PCAdminUsers
                                                                                                                      nU                                        er                            
x = %[
        PCAdminUsers,ProdVIP-PCAdminUsers
        PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole
        PCGuestUsers,ProdVIP-PCGuestUsers
        PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers
        ViveraAccelerator,ProdVIP-ViveraAccelerator
        UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole
        RPAdminUsers,ProdVIP-RPAdminUsers
        DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole
        InternalOEUsers,ProdVIP-InternalOEUsers
        CSAdminUserRole,ProdVIP-CSAdminUserRole
        PCMailhostReaderRole,PR_Mailhost_Users
        SFDCUsers,ProdVIP-SFDCUsers
        PCFinanceUser,ProdVIP-PCFinanceUser
        PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser
        AdjustTEDUsers,ProdVIP-AdjustTEDUsers
        PCMCATUsers,ProdVIP-PCMCATUsers
        IPLScripterUsers,ProdVIP-IPLScripterUsers
        ALIGNTECH.COM/PCMCATUsers
        ALIGNTECH/NORTHAM DIRECT
        ALIGNTECH/Testenv_VIP-RPAdminUsers
        Internal/everyone
        ALIGNTECH/ProdVIP-PCAdminUsers
        ALIGNTECH/Test$nv_VIP-PCGuestUsers
        ALIGNTECH/ProdVIP-PCGuestUsers
        ALIGNTECH/Testenv_VIP-PCAdminU        ALIGNTECH/Testenv_VIP-PCAdminU  er        ALI
OmniAuth::Strategies::InvisalignWithImpersonation.new
OmniAuth::Strategies::InvisalignWithImpersonation.new(:a,:b, {})
s = OmniAuth::Strategies::InvisalignWithImpersonation.new(:a,:b, {})
s.options
s.options.impersonator_roles
s.options.impersonator_roles.join(",")
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :KR), :username
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :KR), :username
k
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :KR, locale: Locale.ilike('kr')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :KR, locale: Locale.all.ilike('kr')), :username
renvi qas
Registration
Doctor.where(country: :JP).includes(:locale, :region).limit(20)
ass
ass.grep /table/i
ass.grep /tables/jqu/i
ass.grep /tables\/jqu/i
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: :TW, locale: Locale.all.ilike('en')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('en')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('jp')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('ja')), :username
renvi prod
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('ja')), :username
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('zh')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('jp')), :username
renvi prod
Salesforce::Contact
HerokuConnect::Contact
Salesforce::Counter
Salesforce::Counter.attribute_names.grep /qua
Salesforce::Counter.attribute_names.grep /qua/
Salesforce::Counter.attribute_names.grep /cas/
show-routes -G out
renvi prod
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(locale: Locale.all.ilike('mx')), :username
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(locale: Locale.all.ilike('mx')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(locale: Locale.all.ilike('tw')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(country: :TW), :username
renvi ppr
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(locale: Locale.all.ilike('jp')), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(country: [:JP, :TW, :KR, :CN]), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(country: [:TW, :JP, :KR, :NZ, :AU]), :username
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_doc(country: [:TW, :JP, :KR, :NZ, :AU]), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountry: [:TW, :JP, :KR, :NZ, :AU]), :username
P, :KR, :NZ, :AU]), :username
ProgramRegistration
Salesforce::ProgramRegistration
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts({}), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts({}), :user_name__c
Salesforce::Contatc
Salesforce::Contact
Salesforce::Contact.attribute_names.grep /country/
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:TW, :JP, :KR, :NZ, :AU]), :username
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:TW, :JP, :KR, :NZ, :AU]), :user_name__c
Salesforce::Contact.attribute_names.grep /local/
Salesforce::Contact.attribute_names.grep /lang/
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:AU]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:KR]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:KR]), :user_name__c
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:KR]), :user_name__c
ailingcountrycode: [:KR]), :user_name__c
? Doctor.all.joins
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:KR]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:JP]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:KR]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:JP]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.pwn2138_non(mailingcountrycode: [:JP]).lazy.take(3), :user_name__c
load './app/lib/sample_docs.rb'; tp dd = SampleDocs.pwn2138_non(mailingcountrycode: [:JP]).lazy.take(3), :user_name__c
tp dd
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:KR]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:CN]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:ZH]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:CN]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:JP]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:NZ]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:TW]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:SG]), :user_name__c
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:MO]), :user_name__c
renvi qas
load './app/lib/sample_docs.rb'; tp SampleDocs.adv_contacts(mailingcountrycode: [:AU]), :user_name__c
dr(:gtest).ids_info
dr(:gtest).ids_info.keys
dr(:gtest).ids_info.key.grep /adva/
dr(:gtest).ids_info.key.grep /adva/i
dr(:gtest).ids_info.keys.grep /adva/i
dr(:gtest).ids_info['globalAdvantage']
dr(:gtest).ids_info['advantageBanner']
dr(:gtest).ids_info['advantage']
renvi prod
dr(:C00150532)
dr(:c00150532)
kkUpdate
renvi prod
dr(:c00150532)
Doctor.find_by(did: 474615)
Doctor.find_by(did: 474615).program_registrations
Doctor.find_by(did: 474615).enrollments
Doctor.find_by(did: 474615).enrollments.first.program
Doctor.find_by(did: 474615).registrations.first.program
renvi qas
dr(:gtets).salesforce_counter
dr(:gtest).salesforce_counter
3805084
renvi prod
Doctor.find(3805084)
appo.find(3805084)
Salesforce::Event.find(3805084).owner
renvi prod
UpdateProduct.count
HerokuConnect::UpdateProduct.count
tp _
tp HerokuConnect::UpdateProduct
tp HerokuConnect::UpdateProduct.all
tp HerokuConnect::UpdateProduct.all.where(program_code: "NAADV")
HerokyConnect::UpdateProduct
HerokuConnect::UpdateProduct
tp HerokuConnect::UpdateProduct.all.where(program_code: "NAADV")
tp HerokuConnect::UpdateProduct.all.where(program_code: "NAADV"), :config, :id
Product.all
Product.count
Product
Product,all
Product.all
tp _
tp HerokuConnect::UpdateProduct.all.where(program_code: "NAADV")
show-routes -G out
ls HerokuConnect::UpdateDoctor
ls HerokuConnect::UpdateDoctor -G sync
'HerokuConnect::UpdateDoctor.sync({})
HerokuConnect::UpdateDoctor.sync({})
HerokuConnect::UpdateDoctor.sync(filter: {})
renvi prod
appo.clinical.where(sfid: nul).count
appo.clinical.where(sfid: nil).count
tp appo.clinical.where(sfid: nil)
HerokuConnectSyncHealthChecker
HerokuConnectSyncHealthChecker.sync_down?
clapcfg
roles = ('PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test$nv_VIP-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'.
  split(',') + %w[
             ProdVIP-PCGuestUsers
             ProdVIP-PCGuestReadOnlyUsers
             ProdVIP-PCAdminUsers
             ProdVIP-PCFinanceReadOnly User
             ProdVIP-PCFinanceUser
             ProdVIP-RPAdminUsers
         ]).uniq.sort.join(',')
roles = ('PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test$nv_VIP-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'.
  split(',') + %w[
             ProdVIP-PCGuestUsers
             ProdVIP-PCGuestReadOnlyUsers
             ProdVIP-PCAdminUsers
             ProdVIP-PCFinanceReadOnly User
             ProdVIP-PCFinanceUser
             ProdVIP-RPAdminUsers
         ]).uniq.sort.+(%w[
             APAC DIRECT
             APAC DISTRIBUTOR
             CANADA DIRECT
             CHINA DIRECT
             EMEA DIRECT
             EU DISTRIBUTOR
             EUROPE DIRECT
             INDIA DIRECT
             JAPAN DIRECT
             KOREA DIRECT
             LATAM DIRECT
             LATAM DISTRIBUTOR
             NORTHAM DIRECT
             TAIWAN DIRECT
             UK DIRECT
        ]
).join(',')
URI.decode "https://auth.aligntech.com/oauth2/authorize?client_id=YnEnlSU95UG9tAzlf09TsfNw4dwa&loginPage=lab_login.jsp&redirect_uri=http%3A%2F%2Flabsupport.invisalign.com%2Flab%2Foauth&response_type=code&scope=sso+openid&state=8f430cc95bc9b420b3bf39a4f7370d6e99844819e6ffffc2"
redirect_uri=http://labsupport.invisalign.com/lab/oauth
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'
current_roles.split!(',').sort
more_roles = ["ALIGNTECH.COM/PCGuestUsers", "ALIGNTECH.COM/PCGuestReadOnlyUsers", "ALIGNTECH.COM/PCAdminUsers", "ALIGNTECH.COM/PCFinanceReadOnlyUser", "ALIGNTECH.COM/PCFinanceUser", "ALIGNTECH.COM/RPAdminUsers", "ALIGNTECH/ProdVIP-PCGuestUsers", "ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers", "ALIGNTECH/ProdVIP-PCAdminUsers", "ALIGNTECH/ProdVIP-PCFinanceReadOnlyUser", "ALIGNTECH/ProdVIP-PCFinanceUser", "ALIGNTECH/ProdVIP-RPAdminUsers"]
cmd = %[diff = (current_roles - more_roles).sort]
puts cmd, eval(cmd)
cmd = %[diff2 = (more_roles - current_roles).sort]
puts cmd, eval(cmd)
cmd = %[all_roles = (more_roles + current_roles).sort]
puts cmd, eval(cmd)
cd-cause
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'
current_roles.split!(',').sort
more_roles = ["ALIGNTECH.COM/PCGuestUsers", "ALIGNTECH.COM/PCGuestReadOnlyUsers", "ALIGNTECH.COM/PCAdminUsers", "ALIGNTECH.COM/PCFinanceReadOnlyUser", "ALIGNTECH.COM/PCFinanceUser", "ALIGNTECH.COM/RPAdminUsers", "ALIGNTECH/ProdVIP-PCGuestUsers", "ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers", "ALIGNTECH/ProdVIP-PCAdminUsers", "ALIGNTECH/ProdVIP-PCFinanceReadOnlyUser", "ALIGNTECH/ProdVIP-PCFinanceUser", "ALIGNTECH/ProdVIP-RPAdminUsers"]
cmd = %[diff = (current_roles - more_roles).sort]
puts cmd, eval(cmd)
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'
current_roles = current_roles.split!(',').sort
more_roles = ["ALIGNTECH.COM/PCGuestUsers", "ALIGNTECH.COM/PCGuestReadOnlyUsers", "ALIGNTECH.COM/PCAdminUsers", "ALIGNTECH.COM/PCFinanceReadOnlyUser", "ALIGNTECH.COM/PCFinanceUser", "ALIGNTECH.COM/RPAdminUsers", "ALIGNTECH/ProdVIP-PCGuestUsers", "ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers", "ALIGNTECH/ProdVIP-PCAdminUsers", "ALIGNTECH/ProdVIP-PCFinanceReadOnlyUser", "ALIGNTECH/ProdVIP-PCFinanceUser", "ALIGNTECH/ProdVIP-RPAdminUsers"]
cmd = %[diff = (current_roles - more_roles).sort]
puts cmd, eval(cmd)
cmd = %[diff2 = (more_roles - current_roles).sort]
puts cmd, eval(cmd)
cmd = %[all_roles = (more_roles + current_roles).sort]
puts cmd, eval(cmd)
cd-cause
? ''.red
? '1'.red
'1'.red
$ ''.red
rules = YAML.load(File.read("./db/data/dynamic_route_visitor_sql_rules.yaml")).
select { |e| e["name"].in? ["CCPro", "Full Invisalign", "MAF"] }
rules = YAML.load(File.read("./db/data/dynamic_route_visitor_sql_rules.yaml"))
rules.select { |e| e['name'].length < 10 } 
Salesforce
require 'salesforce'
loa 'salesforce'
load 'salesforce'
load './app/models/salesforce.rb'
Salesforce
? require
clapcfg
n
next
next
clapcfg.count
tp clapcfg.all
clapcfg.delete_all
clap::AppointmentType
tp _
clap::AppointmentType.delete_all
renvi qas
dr(:mgorosti).ids_info
pbcopy _
pbcopy _.to_json
pbcopy dr(:mgorosti).ids_info.to_json
dr(:mgorosti).eligible_for_clinical_appointments?
dr(:mgorosti).clinical_appointments_eligibility_factors_for_debugging
pbcopy dr(:mgorosti).ids_info.to_json
pbcopy dr(:mgorosti).ids_info.sort.to_h.to_json
mbattini = %[ALIGNTECH/ProdVIP-STTranslatorUsers,ALIGNTECH/DL - Project - Bundle Releases,ALIGNTECH/Europe - Amsterdam office,ALIGNTECH/DL Team - CCPro,ALIGNTECH/BI_Reports_Invisalign_ClinCheck,ALIGNTECH/BI_Corp_Analyst,ALIGNTECH/BI_Reports_DS_CP_CCProReport,ALIGNTECH/Citrix International Developer Users,ALIGNTECH/Medallia File Share RW,ALIGNTECH/DL Team - Commercial Datamart Users,ALIGNTECH/BI_Sales_Mktg_All,ALIGNTECH/DL Team - Intl IDS Changes,ALIGNTECH/DL - Team - EU Photo Club,ALIGNTECH/DL Team - EU Marketing Communication,ALIGNTECH/Professional Marketing EMEA,ALIGNTECH/Tooling Notifications,ALIGNTECH/DL Team - EU Business Operations,ALIGNTECH/VPN-Users-INTL-noST,ALIGNTECH/DL Tooling Users,ALIGNTECH/Align DFS Marketing Restricted EMEA SurveyComments,ALIGNTECH/Citrix SAPGUI QAS Users,ALIGNTECH/DL Team - EMEA Education,ALIGNTECH/DL - Team askigoteam,ALIGNTECH/DL - Team - Arena Full-Apprv Users,ALIGNTECH/EMEA Marketing,ALIGNTECH/Citrix SAPGUI PPR Users,ALIGNTECH/BI_Reports_Invisalign_SalesEMEA,ALIGNTECH/ProdVIP-PCFinanceUser,ALIGNTECH/Align DFS Marketing Restricted NA SurveyComments RW,ALIGNTECH/DL - OctProjectsEMEA,ALIGNTECH/BI_UCCX_FullAccess,ALIGNTECH/DL - MPU BUP-UAT,ALIGNTECH/Project - Mobile Photo Uploader,ALIGNTECH/IN_CorpBIUser,ALIGNTECH/DL Project ‚Äì CX Simplification,ALIGNTECH/Team-MRInvisalign,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/APAC ASKCRM,ALIGNTECH/Medallia VOC-Power Users,ALIGNTECH/Classwave3Launch,ALIGNTECH/Manufactoring Issues,ALIGNTECH/Marketing Users,ALIGNTECH/DL Project ‚Äì Lite Improvements Commercial,ALIGNTECH/DL - AlignOne - SmokeTest,ALIGNTECH/EUAdvantage-Support,ALIGNTECH/DL Team - AlignOne Super Users,ALIGNTECH/Align DFS Operations Logistics Restricted Gilog RW,ALIGNTECH/DL Team - CCWeb,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/DL - GEOX Russia Localization,ALIGNTECH/ProdVIP-AdjustTEDUsers,ALIGNTECH/ProdVIP-DeltaAdminUserRole,Internal/everyone,ALIGNTECH/BI_SSO_PRD,ALIGNTECH/OPS CI Wave 1,ALIGNTECH/DL Team - EU Production Support,ALIGNTECH/CR DFS QUA Unknow Mismatch EMEA - RW,ALIGNTECH/DL - Team - Ask CRM,ALIGNTECH/Citrix SAPGUI PRD Users,ALIGNTECH/PR_Mailhost_Users,ALIGNTECH/VOC_OpenEndedComments_EMEA,ALIGNTECH/DL - Team - EMEA Product Marketing,ALIGNTECH/BI_CORP,ALIGNTECH/DL - Team BI User Group,ALIGNTECH/ProdVIP-InternalOEUsers,ALIGNTECH/BI_Reports_Invisalign_Education_Report, domain=ALIGNTECH} authorities are [ROLE_PCFINANCEUSERROLE, ROLE_PCADMINUSERROLE, ROLE_PCGUESTUSERROLE, ROLE_ADJUSTTEDUSERROLE, ROLE_DELTAADMINUSERROLE, ROLE_PCMAILHOSTREADERROLE, ROLE_INTERNALOEUSERROLE]
mbattini = %[ALIGNTECH/ProdVIP-STTranslatorUsers,ALIGNTECH/DL - Project - Bundle Releases,ALIGNTECH/Europe - Amsterdam office,ALIGNTECH/DL Team - CCPro,ALIGNTECH/BI_Reports_Invisalign_ClinCheck,ALIGNTECH/BI_Corp_Analyst,ALIGNTECH/BI_Reports_DS_CP_CCProReport,ALIGNTECH/Citrix International Developer Users,ALIGNTECH/Medallia File Share RW,ALIGNTECH/DL Team - Commercial Datamart Users,ALIGNTECH/BI_Sales_Mktg_All,ALIGNTECH/DL Team - Intl IDS Changes,ALIGNTECH/DL - Team - EU Photo Club,ALIGNTECH/DL Team - EU Marketing Communication,ALIGNTECH/Professional Marketing EMEA,ALIGNTECH/Tooling Notifications,ALIGNTECH/DL Team - EU Business Operations,ALIGNTECH/VPN-Users-INTL-noST,ALIGNTECH/DL Tooling Users,ALIGNTECH/Align DFS Marketing Restricted EMEA SurveyComments,ALIGNTECH/Citrix SAPGUI QAS Users,ALIGNTECH/DL Team - EMEA Education,ALIGNTECH/DL - Team askigoteam,ALIGNTECH/DL - Team - Arena Full-Apprv Users,ALIGNTECH/EMEA Marketing,ALIGNTECH/Citrix SAPGUI PPR Users,ALIGNTECH/BI_Reports_Invisalign_SalesEMEA,ALIGNTECH/ProdVIP-PCFinanceUser,ALIGNTECH/Align DFS Marketing Restricted NA SurveyComments RW,ALIGNTECH/DL - OctProjectsEMEA,ALIGNTECH/BI_UCCX_FullAccess,ALIGNTECH/DL - MPU BUP-UAT,ALIGNTECH/Project - Mobile Photo Uploader,ALIGNTECH/IN_CorpBIUser,ALIGNTECH/DL Project ‚Äì CX Simplification,ALIGNTECH/Team-MRInvisalign,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/APAC ASKCRM,ALIGNTECH/Medallia VOC-Power Users,ALIGNTECH/Classwave3Launch,ALIGNTECH/Manufactoring Issues,ALIGNTECH/Marketing Users,ALIGNTECH/DL Project ‚Äì Lite Improvements Commercial,ALIGNTECH/DL - AlignOne - SmokeTest,ALIGNTECH/EUAdvantage-Support,ALIGNTECH/DL Team - AlignOne Super Users,ALIGNTECH/Align DFS Operations Logistics Restricted Gilog RW,ALIGNTECH/DL Team - CCWeb,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/DL - GEOX Russia Localization,ALIGNTECH/ProdVIP-AdjustTEDUsers,ALIGNTECH/ProdVIP-DeltaAdminUserRole,Internal/everyone,ALIGNTECH/BI_SSO_PRD,ALIGNTECH/OPS CI Wave 1,ALIGNTECH/DL Team - EU Production Support,ALIGNTECH/CR DFS QUA Unknow Mismatch EMEA - RW,ALIGNTECH/DL - Team - Ask CRM,ALIGNTECH/Citrix SAPGUI PRD Users,ALIGNTECH/PR_Mailhost_Users,ALIGNTECH/VOC_OpenEndedComments_EMEA,ALIGNTECH/DL - Team - EMEA Product Marketing,ALIGNTECH/BI_CORP,ALIGNTECH/DL - Team BI User Group,ALIGNTECH/ProdVIP-InternalOEUsers,ALIGNTECH/BI_Reports_Invisalign_Education_Report]
mbattini_r = mbattini.split(',')
require 'ap'
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestRe
require 'ap'
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestRe
current_roles = 'PCAdminUsers,ProdVIP-PCAdminUsers,PCExternalAdmin,ProdVIP-PCExternalAdmin,ProdPCExternalAdminRole,PCGuestUsers,ProdVIP-PCGuestUsers,PCGuestReadOnlyUsers,ProdVIP-PCGuestReadOnlyUsers,ViveraAccelerator,ProdVIP-ViveraAccelerator,UnrestrictedCancelRole,ProdVIP-UnrestrictedCancelRole,RPAdminUsers,ProdVIP-RPAdminUsers,DeltaAdminUserRole,ProdVIP-DeltaAdminUserRole,InternalOEUsers,ProdVIP-InternalOEUsers,CSAdminUserRole,ProdVIP-CSAdminUserRole,PCMailhostReaderRole,PR_Mailhost_Users,SFDCUsers,ProdVIP-SFDCUsers,PCFinanceUser,ProdVIP-PCFinanceUser,PCFinanceReadOnlyUser,ProdVIP-PCFinanceReadOnlyUser,AdjustTEDUsers,ProdVIP-AdjustTEDUsers,PCMCATUsers,ProdVIP-PCMCATUsers,IPLScripterUsers,ProdVIP-IPLScripterUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/Testenv_VIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers'
current_roles = current_roles.split(',').sort
more_roles = ["ALIGNTECH.COM/PCGuestUsers", "ALIGNTECH.COM/PCGuestReadOnlyUsers", "ALIGNTECH.COM/PCAdminUsers", "ALIGNTECH.COM/PCFinanceReadOnlyUser", "ALIGNTECH.COM/PCFinanceUser", "ALIGNTECH.COM/RPAdminUsers", "ALIGNTECH/ProdVIP-PCGuestUsers", "ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers", "ALIGNTECH/ProdVIP-PCAdminUsers", "ALIGNTECH/ProdVIP-PCFinanceReadOnlyUser", "ALIGNTECH/ProdVIP-PCFinanceUser", "ALIGNTECH/ProdVIP-RPAdminUsers"]
cmd = %[diff = (current_roles - more_roles).sort]
puts cmd.red, eval(cmd)
cmd = %[diff2 = (more_roles - current_roles).sort]
puts cmd.red, eval(cmd)
cmd = %[all_roles = (more_roles + current_roles).sort]
puts cmd.red, (all_roles = eval(cmd))
puts all_roles.join(',')
[1,2,3] % [2,3,4]
[1,2,3] * [2,3,4]
[1,2,3] & [2,3,4]
cmd = %[(mbattini_r + all_roles).sort]
puts cmd.red, (mbat_registered = eval(cmd))
cmd = %[(mbattini_r & all_roles).sort]
puts cmd.red, (mbat_registered = eval(cmd))
wcm_roles = 'ALIGNTECH.COM/PCAdminUsers,ALIGNTECH.COM/PCFinanceReadOnlyUser,ALIGNTECH.COM/PCFinanceUser,ALIGNTECH.COM/PCGuestReadOnlyUsers,ALIGNTECH.COM/PCGuestUsers,ALIGNTECH.COM/PCMCATUsers,ALIGNTECH.COM/RPAdminUsers,ALIGNTECH/NORTHAM DIRECT,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/ProdVIP-PCAdminUsers,ALIGNTECH/ProdVIP-PCFinanceReadOnlyUser,ALIGNTECH/ProdVIP-PCFinanceUser,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers,ALIGNTECH/ProdVIP-PCGuestReadOnlyUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/ProdVIP-PCGuestUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/ProdVIP-RPAdminUsers,ALIGNTECH/Test-PCGuestUsers,ALIGNTECH/Testenv_VIP-PCAdminUsers,ALIGNTECH/Testenv_VIP-RPAdminUsers,AdjustTEDUsers,CSAdminUserRole,DeltaAdminUserRole,IPLScripterUsers,InternalOEUsers,PCAdminUsers,PCExternalAdmin,PCFinanceReadOnlyUser,PCFinanceUser,PCGuestReadOnlyUsers,PCGuestUsers,PCMCATUsers,PCMailhostReaderRole,PR_Mailhost_Users,ProdPCExternalAdminRole,ProdVIP-AdjustTEDUsers,ProdVIP-CSAdminUserRole,ProdVIP-DeltaAdminUserRole,ProdVIP-IPLScripterUsers,ProdVIP-InternalOEUsers,ProdVIP-PCAdminUsers,ProdVIP-PCExternalAdmin,ProdVIP-PCFinanceReadOnlyUser,ProdVIP-PCFinanceUser,ProdVIP-PCGuestReadOnlyUsers,ProdVIP-PCGuestUsers,ProdVIP-PCMCATUsers,ProdVIP-RPAdminUsers,ProdVIP-SFDCUsers,ProdVIP-UnrestrictedCancelRole,ProdVIP-ViveraAccelerator,RPAdminUsers,SFDCUsers,UnrestrictedCancelRole,ViveraAccelerator'.split(',')
cmd = %[(mbattini_r & wcm_roles).sort]
puts cmd.red, (mbat_registered = eval(cmd))
svacc_roles = ["Application/pwa_common_user_payments_usm_PRODUCTION","Application/pwa_common_user_nume_education_tab_usm_PRODUCTION","Application/pwa_common_user_nume_support_tab_usm_PRODUCTION","Application/pwa_common_user_doctor_appointment_calendar_usm_PRODUCTION","Application/pwa_common_user_ideas_platform_usm_PRODUCTION","Internal/everyone","Application/pwa_common_user_invisalign_pro_usm_PRODUCTION","Application/pwa_common_user_invisalign_practice_usm_PRODUCTION","Application/pwa_common_user_invisalign_sso_usm_PRODUCTION","Application/pwa_common_user_invisalign_consult_tool_usm_PRODUCTION","Application/pwa_common_user_collaboration_usm_PRODUCTION","Application/pwa_common_user_apac_learn_PRODUCTION","Application/pwa_common_user_store_us_usm_PRODUCTION","Application/pwa_common_user_web_content_manager_usm_PRODUCTION","Internal/subscriber","Application/pwa_common_user_global_advantage_usm_PRODUCTION","Application/pwa_common_user_store_apac_usm_PRODUCTION","Application/pwa_common_user_doclocator_usm_PRODUCTI
svacc_roles = ["Application/pwa_common_user_payments_usm_PRODUCTION","Application/pwa_common_user_nume_education_tab_usm_PRODUCTION","Application/pwa_common_user_nume_support_tab_usm_PRODUCTION","Application/pwa_common_user_doctor_appointment_calendar_usm_PRODUCTION","Application/pwa_common_user_ideas_platform_usm_PRODUCTION","Internal/everyone","Application/pwa_common_user_invisalign_pro_usm_PRODUCTION","Application/pwa_common_user_invisalign_practice_usm_PRODUCTION","Application/pwa_common_user_invisalign_sso_usm_PRODUCTION","Application/pwa_common_user_invisalign_consult_tool_usm_PRODUCTION","Application/pwa_common_user_collaboration_usm_PRODUCTION","Application/pwa_common_user_apac_learn_PRODUCTION","Application/pwa_common_user_store_us_usm_PRODUCTION","Application/pwa_common_user_web_content_manager_usm_PRODUCTION","Internal/subscriber","Application/pwa_common_user_global_advantage_usm_PRODUCTION","Application/pwa_common_user_store_apac_usm_PRODUCTION","Application/pwa_common_user_doclocator_usm_PRODUCTION","Application/pwa_common_user_payments_local_PRODUCTION","Application/pwa_common_user_store_eu_usm_PRODUCTION","Application/pwa_common_user_invisalign_online_academy_usm_PRODUCTION","Application/pwa_common_user_payments_eu_usm_PRODUCTION","Application/pwa_common_user_store_gcc_usm_PRODUCTION","Application/pwa_common_user_tps_usm_PRODUCTION"]
decode("https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Flogentries.com%2Faccounts%2Finvite%2F0f26a7e2-bb38-4e9d-9d93-20353ffbaca8%2F&amp;data=02%7C01%7Catitov%40aligntech.com%7C97fa3a89d7214dc07a0608d6c81cdb11%7C9ac44c96980a481bae23d8f56b82c605%7C0%7C1%7C636916423608734043&amp;sdata=RFkx0UnoaroPIxv7O9xeayfzWdTSldbLoLxsZtFMYH0%3D&amp;reserved=0")
URL.decode("https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Flogentries.com%2Faccounts%2Finvite%2F0f26a7e2-bb38-4e9d-9d93-20353ffbaca8%2F&amp;data=02%7C01%7Catitov%40aligntech.com%7C97fa3a89d7214dc07a0608d6c81cdb11%7C9ac44c96980a481bae23d8f56b82c605%7C0%7C1%7C636916423608734043&amp;sdata=RFkx0UnoaroPIxv7O9xeayfzWdTSldbLoLxsZtFMYH0%3D&amp;reserved=0")
URI.decode("https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Flogentries.com%2Faccounts%2Finvite%2F0f26a7e2-bb38-4e9d-9d93-20353ffbaca8%2F&amp;data=02%7C01%7Catitov%40aligntech.com%7C97fa3a89d7214dc07a0608d6c81cdb11%7C9ac44c96980a481bae23d8f56b82c605%7C0%7C1%7C636916423608734043&amp;sdata=RFkx0UnoaroPIxv7O9xeayfzWdTSldbLoLxsZtFMYH0%3D&amp;reserved=0")
Bundler.with_clean_env{ `h qas config:get FEATURE_READONLY_FOLLOWER__MASTER_DB_URL` }
load '~/.pryrc'
prenvi
load '~/.pryrc'
prenvi
load '~/.pryrc'
prenvi
Doctor
Doctor.find_by(%[ids_info ->> did = 942712])
Doctor.find_by(%[ids_info ->> 'did' = 942712])
Doctor.find_by(%[ids_info ->> 'did' = '942712'])
d = _
d.username
Doctor.find_by(%[ids_info ->> 'did' = '954261'])
d2 = Doctor.find_by(%[ids_info ->> 'did' = '954261'])
d2.username
d.username
d
d.display_name
d.username
Doctor.where(%[ids_info ->> 'did' = '942712'])
d12 = Doctor.where(%[ids_info ->> 'did' = '942712'])
d.country
tp d12.did
tp d12, :did
tp d12, 'ids_info["did"]'
tp d12, 'ids_full_info["did"]'
d12.map{ |e| e.ids_info['did']}
d2
d2.username
d2.country
d2.eligible_for_clinical_appointments?
ls d2 -G appo
d2.clinical_appointments_eligibility_factors_for_debugging
d2.username
d2.categories(refresh: true)
d2.ids_info['impersonator']
d2.username
dr(:c00211460)
dr(:c00211460).eligible_for_clinical_appointments?
turkish = dr(:c00211460)
turkish.clinical_appointments_eligibility_factors_for_debugging
cd-cause
salesforce_counter
cd turkish
ids_info.slice('userName', 'bookAppointment', 'totalLifetimeShippedCases')
ids_full_info.try { |e| e['bookAppointment'] }
salesforce_contact.present?
salesforce_contact
Salesforce::Contact.find_by(account_number__c: 948827)
turk_contact = Salesforce::Contact.find_by(account_number__c: 948827)
turk_contact.contact_status__c
dr.cl_ap_obt_eligible.find_by(country: :TR)
r
Doctor.cl_ap_obt_eligible.find_by(country: :TR)
Doctor.cl_obt_eligible.find_by(country: :TR)
dt2 = _
dt2.username
dt2.display_name
dt2.salesforce_contact
turk_contact2 = Salesforce::Contact.find_by(account_number__c: dt2.ids_info['did'])
dt2.username
turk_conts = Salesforce::Contact.where(country: :TR);
group_by_and_count(['contact_status__c'], turk_conts);
turk_conts = Salesforce::Contact.where(mailingcountry: :TR);
group_by_and_count(['contact_status__c'], turk_conts);
turk_conts = Salesforce::Contact.where(mailingcountrycode: :TR);
group_by_and_count(['contact_status__c'], turk_conts);
group_by_and_count(['contact_status__c'], Salesforce::Contact.where(mailingcountrycode: :GB));
group_by_and_count(['contact_status__c'], Salesforce::Contact.where(mailingcountrycode: :ES));
renvi prod
\\
dr(:c14241421)
dr(:c14241421).eligible_for_clinical_appointments?
d3 = dr(:c14241421)
d3.clinical_appointments_eligibility_factors_for_debugging
d3.eligible_for_clinical_appointments?
renvi prod
d3 = dr(:c14241421)
d3.eligible_for_clinical_appointments?
d3.clinical_appointments_eligibility_factors_for_debugging
d3.ids_info
d3.ids_info['impersonator']
d3.ids_info['impersonator'] = nil
d3.save
d3.ids_info['impersonator']
d3.reload.ids_info['impersonator']
d3.ids_full_info['impersonator'] = nil
d3.sacve
d3.save
d3.ids_full_info['impersonator'] 
renvi qa
DynamicRoute.count
DynamicRoute.where(%[created_at < ?], 6.months.ago).count
DynamicRoute.where(%[created_at < ?], 6.months.ago).delete_all
access_token
ls _
access_token.options
access_token['scope']
renvi prod
